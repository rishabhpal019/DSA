class Solution:
    def judgePoint24(self, cards: List[int]) -> bool:
        def backtrack(nums):
            if len(nums) == 1:
                return abs(nums[0] - 24) < 1e-6

            for i in range(len(nums)):
                for j in range(len(nums)):
                    if i != j:
                        a, b = nums[i], nums[j]
                        next_nums = [nums[k] for k in range(len(nums)) if k != i and k != j]

                        results = [a + b, a - b, b - a, a * b]
                        if abs(b) > 1e-6:
                            results.append(a / b)
                        if abs(a) > 1e-6:
                            results.append(b / a)

                        for res in results:
                            if backtrack(next_nums + [res]):
                                return True
            return False

        return backtrack([float(x) for x in cards])
